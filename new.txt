Compiling 1 file (.ex)
Compiling 1 file (.ex)
Running ExUnit with seed: 883724, max_cases: 32

[
  [:open_object, :string, 107, 101, 121, :string, :semicolon, :string, 118, 97,
   108, 117, 101, :string],
  [:close_object]
]
.[
  [:open_object, :string, 107, 101, 121, :string, :semicolon, :string, 118, 97,
   108, 117, 101, :string, :close_object]
]
.[
  [:open_object, :string, 107, 101, 121, :string, :semicolon, :string, 118, 97,
   108, 117, 101, :string],
  [:string, 107, 101, 121, 50, :string, :semicolon, :string, 118, 97, 108, 117,
   101, :string, :close_object]
]
.[
  [:open_object, :string, 107, 101, 121, :string, :semicolon, :string, 118, 97,
   108, 117, 101, :string],
  [107, 101, 121, 50, :semicolon, :string, 118, 97, 108, 117, 101, :string,
   :close_object]
]
.[
  [:open_object, :string, 107, 101, 121, 49, :string, :semicolon, 116, 114, 117,
   101],
  [:string, 107, 101, 121, 50, :string, :semicolon, 102, 97, 108, 115, 101],
  [:string, 107, 101, 121, 51, :string, :semicolon, 110, 117, 108, 108],
  [:string, 107, 101, 121, 52, :string, :semicolon, :string, 118, 97, 108, 117,
   101, :string],
  [:string, 107, 101, 121, 53, :string, :semicolon, 49, 48, 49, :close_object]
]
.[
  [:open_object, :string, 107, 101, 121, 49, :string, :semicolon, 116, 114, 117,
   101],
  [:string, 107, 101, 121, 50, :string, :semicolon, 70, 97, 108, 115, 101],
  [:string, 107, 101, 121, 51, :string, :semicolon, 110, 117, 108, 108],
  [:string, 107, 101, 121, 52, :string, :semicolon, :string, 118, 97, 108, 117,
   101, :string],
  [:string, 107, 101, 121, 53, :string, :semicolon, 49, 48, 49, :close_object]
]
.[
  [:open_object, :string, 107, 101, 121, :string, :semicolon, :string, 118, 97,
   108, 117, 101, :string],
  [:string, 107, 101, 121, 45, 110, :string, :semicolon, 49, 48, 49],
  [:string, 107, 101, 121, 45, 111, :string, :semicolon, :open_object, :string,
   105, 110, 110, 101, 114, 107, 101, 121, :string, :semicolon, :string, 105,
   110, 110, 101, 114, 118, 97, 108, 117, 101, :string, :close_object],
  [:string, 107, 101, 121, 45, 108, :string, :semicolon, :open_list, :string,
   108, 105, 115, 116, 118, 97, 108, 117, 101, :string, :close_list,
   :close_object]
]
[:open_object, :string, 105, 110, 110, 101, 114, 107, 101, 121, :string,
 :semicolon, :string, 105, 110, 110, 101, 114, 118, 97, 108, 117, 101, :string,
 :close_object]
[
  [:open_object, :string, 107, 101, 121, :string, :semicolon, :string, 118, 97,
   108, 117, 101, :string],
  [:string, 107, 101, 121, 45, 110, :string, :semicolon, 49, 48, 49],
  [:string, 107, 101, 121, 45, 111, :string, :semicolon, :open_object, :string,
   105, 110, 110, 101, 114, 107, 101, 121, :string, :semicolon, :string, 105,
   110, 110, 101, 114, 118, 97, 108, 117, 101, :string, :close_object],
  [:string, 107, 101, 121, 45, 108, :string, :semicolon, :open_list, 39, 108,
   105, 115, 116, 118, 97, 108, 117, 101, 39, :close_list, :close_object]
]
[:open_object, :string, 105, 110, 110, 101, 114, 107, 101, 121, :string,
 :semicolon, :string, 105, 110, 110, 101, 114, 118, 97, 108, 117, 101, :string,
 :close_object]
[
  [:open_object, :string, 107, 101, 121, :string, :semicolon, :string, 118, 97,
   108, 117, 101, :string],
  [:string, 107, 101, 121, 45, 110, :string, :semicolon, 49, 48, 49],
  [:string, 107, 101, 121, 45, 111, :string, :semicolon, :open_object,
   :close_object],
  [:string, 107, 101, 121, 45, 108, :string, :semicolon, :open_list,
   :close_list, :close_object]
]


  1) test valid JSON object 2 (JsonParserstep4Test)
     test/step4_test.exs:27
     ** (Protocol.UndefinedError) protocol Enumerable not implemented for :open_object of type Atom. This protocol is implemented for the following type(s): Date.Range, File.Stream, Function, GenEvent.Stream, HashDict, HashSet, IO.Stream, List, Map, MapSet, Range, Stream
     code: result = parse_json_file("C:\\Users\\JSRIB\\Estudo\\Elixir\\Json parser\\json_parser\\test\\tests\\step4\\valid2.json")
     stacktrace:
       (elixir 1.17.2) lib/enum.ex:1: Enumerable.impl_for!/1
       (elixir 1.17.2) lib/enum.ex:166: Enumerable.reduce/3
       (elixir 1.17.2) lib/enum.ex:1192: Enum.find_index/2
       (json_parser 0.1.0) lib/json_parser_copy.ex:30: JsonParser.parse_entry/1
       (elixir 1.17.2) lib/enum.ex:1703: Enum."-map/2-lists^map/1-1-"/2
       (json_parser 0.1.0) lib/json_parser_copy.ex:10: JsonParser.parse_object/1
       (json_parser 0.1.0) lib/json_parser_copy.ex:42: JsonParser.parse_key_value/2
       (elixir 1.17.2) lib/enum.ex:1703: Enum."-map/2-lists^map/1-1-"/2
       (elixir 1.17.2) lib/enum.ex:1703: Enum."-map/2-lists^map/1-1-"/2
       (json_parser 0.1.0) lib/json_parser_copy.ex:10: JsonParser.parse_object/1
       test/step4_test.exs:28: (test)



  2) test invalid JSON object 1 (JsonParserstep4Test)
     test/step4_test.exs:15
     ** (Protocol.UndefinedError) protocol Enumerable not implemented for :open_object of type Atom. This protocol is implemented for the following type(s): Date.Range, File.Stream, Function, GenEvent.Stream, HashDict, HashSet, IO.Stream, List, Map, MapSet, Range, Stream
     code: result = parse_json_file("C:\\Users\\JSRIB\\Estudo\\Elixir\\Json parser\\json_parser\\test\\tests\\step4\\invalid.json")
     stacktrace:
       (elixir 1.17.2) lib/enum.ex:1: Enumerable.impl_for!/1
       (elixir 1.17.2) lib/enum.ex:166: Enumerable.reduce/3
       (elixir 1.17.2) lib/enum.ex:1192: Enum.find_index/2
       (json_parser 0.1.0) lib/json_parser_copy.ex:30: JsonParser.parse_entry/1
       (elixir 1.17.2) lib/enum.ex:1703: Enum."-map/2-lists^map/1-1-"/2
       (json_parser 0.1.0) lib/json_parser_copy.ex:10: JsonParser.parse_object/1
       (json_parser 0.1.0) lib/json_parser_copy.ex:42: JsonParser.parse_key_value/2
       (elixir 1.17.2) lib/enum.ex:1703: Enum."-map/2-lists^map/1-1-"/2
       (elixir 1.17.2) lib/enum.ex:1703: Enum."-map/2-lists^map/1-1-"/2
       (json_parser 0.1.0) lib/json_parser_copy.ex:10: JsonParser.parse_object/1
       test/step4_test.exs:16: (test)

...
Finished in 0.1 seconds (0.00s async, 0.1s sync)
11 tests, 2 failures
